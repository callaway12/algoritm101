우선 노드 트리의 구성을

데이타와 왼쪽 오른쪽 자식이 누구인지와 자신의 하위 노드의 카운트가 얼마인지로 구성되어 있습니다.

그런 후 테스트케이스에 맞게 for loop 를 돌며 입력값을 받아 트리의 어레이로 넣습니다.

asdf라는 함수를 만들어 각 노드에서 하위 노드들의 갯수를 저장합니다.

총 4가지로

1. 가장 밑에 리프 노드일 경우는 자신만 존재하므로 cnt를 하나만 카운트하고

2. 양쪽 모두 존재한다면 좌우 자식 노드의 cnt값을 받아와서 자신과 더불어 카운트를 하고 cnt를 저장합니다.

3. 왼쪽 4.오른쪽 노드만 존재한다면 각 노드의 cnt값을 받아와 자신과 더불어 카운트 후 cnt를 저장합니다.

즉, 저는 각 노드들 마다 자신의 하위 노드들의 갯수를 모두 저장하게 하였습니다.

recursion을 사용하여 asdf함수로 각 노드들의 갯수를 저장하였습니다.

재귀함수인 asdf로 자신의 하위노드들의 cnt값을 받아오며 자신의 cnt값에 넣으며

간단하게 각 테스트 케이스마다

모든 노드들에 해당하는 cnt 값을 각 노드 자체에 저장하며

출력값을 저장하는 배열을 만들어 최종 출력값을 뽑아 냈습니다.

총 시간복잡도는 O(n)으로 구성되었습니다.
